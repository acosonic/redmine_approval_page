:css
  p.approval_item.is-done {
    text-decoration: line-through;
    color: #999;
  }
- unless approval_item.approved?
  :css
    ul.watchers li[class=user-#{approval_item.user_id}] a.delete{
      display:none;
    }

:javascript
  function approve_item(elem,url,id){
      $.ajax({url: url,
          type: 'PUT',
          dataType: 'script',
          data: 'approval_item_' + id})
      var checkbox = $(elem)
      if (checkbox.is(':checked'))
          checkbox.removeAttr('checked')
      else
          checkbox.attr('checked', true)
  }

%p.approval_item{:id => "approval_item_#{approval_item.id}", :class => approval_item.approved? ? "is-done" : ""}
  = check_box_tag :approval_item, "1", approval_item.approved?, :disabled => (User.current != approval_item.approver) || @issue.closed?, :onclick =>"approve_item(this,'#{url_for({:controller => :approval_items, :action => :update, :id => approval_item.id, :issue_id => @issue.id, :approval_item => {:approved => !approval_item.approved?}})}','#{approval_item.id}')"
  = label_tag :approval_item, h(approval_item.approver)
  - if !@issue.closed? && User.current.allowed_to?(:manage_approval_items, @project)
    = link_to(image_tag('delete.png'), {:controller => :approval_items, :action => :destroy, :id => approval_item.id, :issue_id => @issue.id}, :remote => true, :method => :delete, :confirm => l(:text_are_you_sure), :html => {:class  => "delete", :title => l(:button_delete) })
